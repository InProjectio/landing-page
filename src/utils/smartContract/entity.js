import web3 from './web3';

const address = process.env.REACT_APP_SMART_CONTRACT_ENTITY_ADDRESS;

const abi = [{ inputs: [{ internalType: 'address', name: 'userMapping_contract', type: 'address' }, { internalType: 'address', name: 'company_contract', type: 'address' }], stateMutability: 'nonpayable', type: 'constructor' }, { anonymous: false, inputs: [{ indexed: true, internalType: 'address', name: 'previousAdmin', type: 'address' }, { indexed: true, internalType: 'address', name: 'newAdmin', type: 'address' }], name: 'SuperAdminTransferred', type: 'event' }, { inputs: [{ internalType: 'string', name: 'entityId', type: 'string' }, { internalType: 'string', name: 'userMappingId', type: 'string' }, { internalType: 'string', name: 'role', type: 'string' }], name: 'addAdminToEntity', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'string', name: 'entityId', type: 'string' }, { internalType: 'string', name: 'userMappingId', type: 'string' }, { internalType: 'string', name: 'role', type: 'string' }], name: 'addEmployeeToEntity', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'string', name: 'entityId', type: 'string' }, { internalType: 'string', name: '_companyId', type: 'string' }, { internalType: 'string', name: 'dataEntity', type: 'string' }], name: 'addEntity', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [], name: 'adminAddress', outputs: [{ internalType: 'address', name: '', type: 'address' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'string', name: 'entityId', type: 'string' }, { internalType: 'string', name: 'userMappingId', type: 'string' }], name: 'changeActiveUser', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'string', name: 'entityId', type: 'string' }], name: 'deleteEntity', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'string', name: 'entityId', type: 'string' }, { internalType: 'string', name: 'dataEntity', type: 'string' }], name: 'editEntity', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'string', name: 'entityId', type: 'string' }, { internalType: 'string', name: 'userMappingId', type: 'string' }, { internalType: 'string', name: 'role', type: 'string' }, { internalType: 'string', name: 'permission', type: 'string' }], name: 'editEntityUser', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'string', name: 'entityId', type: 'string' }], name: 'findEntityId', outputs: [{ internalType: 'string', name: '', type: 'string' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'string', name: '_entityId', type: 'string' }], name: 'getCompanyIdByEntityId', outputs: [{ internalType: 'string', name: '', type: 'string' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'string', name: '_entityId', type: 'string' }], name: 'getEntityDetailById', outputs: [{ internalType: 'string', name: 'entityId', type: 'string' }, { internalType: 'string', name: 'companyId', type: 'string' }, { internalType: 'string', name: 'dataEntity', type: 'string' }, { internalType: 'string', name: 'deleted', type: 'string' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'string', name: '_entityId', type: 'string' }], name: 'getEntityUserDetail', outputs: [{ internalType: 'string', name: '', type: 'string' }, { internalType: 'string', name: '', type: 'string' }, { internalType: 'string', name: '', type: 'string' }, { internalType: 'string', name: '', type: 'string' }, { internalType: 'string', name: '', type: 'string' }, { internalType: 'string', name: '', type: 'string' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'string', name: 'entityId', type: 'string' }, { internalType: 'string', name: 'userMappingId', type: 'string' }], name: 'removeUserFromEntity', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'address', name: 'newAdmin', type: 'address' }], name: 'transferAdmin', outputs: [], stateMutability: 'nonpayable', type: 'function' }]

const contract = web3 ? new web3.eth.Contract(abi, address) : null;

export default contract
