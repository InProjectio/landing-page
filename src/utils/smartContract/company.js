import web3 from './web3';

const address = process.env.REACT_APP_SMART_CONTRACT_COMPANY_ADDRESS;

const abi = [{ inputs: [{ internalType: 'address', name: 'user_contract', type: 'address' }], stateMutability: 'nonpayable', type: 'constructor' }, { inputs: [{ internalType: 'string', name: 'companyId', type: 'string' }, { internalType: 'string', name: 'dataCompany', type: 'string' }, { internalType: 'string', name: 'userMappingId', type: 'string' }, { internalType: 'string', name: 'dataUserMapping', type: 'string' }], name: 'addCompany', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ components: [{ internalType: 'string', name: 'userMappingId', type: 'string' }, { internalType: 'string', name: 'dataUserMapping', type: 'string' }, { internalType: 'uint256', name: 'userId', type: 'uint256' }], internalType: 'struct Company.UserMappingEntity[]', name: '_userMappingEntity', type: 'tuple[]' }, { components: [{ internalType: 'string', name: 'companyId', type: 'string' }, { internalType: 'string', name: 'userMappingId', type: 'string' }, { internalType: 'string', name: 'role', type: 'string' }, { internalType: 'string', name: 'permission', type: 'string' }, { internalType: 'string', name: 'isOwner', type: 'string' }, { internalType: 'string', name: 'active', type: 'string' }], internalType: 'struct Company.CompanyUser[]', name: '_companyUsers', type: 'tuple[]' }], name: 'addMultiUserToCompany', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ components: [{ internalType: 'string', name: 'userMappingId', type: 'string' }, { internalType: 'string', name: 'dataUserMapping', type: 'string' }, { internalType: 'uint256', name: 'userId', type: 'uint256' }], internalType: 'struct Company.UserMappingEntity[]', name: '_userMappingEntity', type: 'tuple[]' }], name: 'addUserMapping', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'string', name: 'companyId', type: 'string' }, { internalType: 'string', name: 'userMappingId', type: 'string' }], name: 'changeActiveUser', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'string', name: 'companyId', type: 'string' }], name: 'deleteCompany', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'string', name: 'companyId', type: 'string' }, { internalType: 'string', name: 'dataCompany', type: 'string' }], name: 'editCompany', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'string', name: '_companyId', type: 'string' }, { internalType: 'string', name: '_userMappingId', type: 'string' }, { internalType: 'string', name: 'role', type: 'string' }, { internalType: 'string', name: 'permission', type: 'string' }], name: 'editCompanyUser', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'string', name: 'userMappingId', type: 'string' }, { internalType: 'string', name: 'dataUserMapping', type: 'string' }, { internalType: 'uint256', name: 'userId', type: 'uint256' }], name: 'editUserMapping', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'string', name: 'companyId', type: 'string' }], name: 'findCompanyId', outputs: [{ internalType: 'string', name: '', type: 'string' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'string', name: '_companyId', type: 'string' }], name: 'getCompanyDetailById', outputs: [{ internalType: 'string', name: 'companyId', type: 'string' }, { internalType: 'string', name: 'dataCompany', type: 'string' }, { internalType: 'string', name: 'deleted', type: 'string' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'string', name: '_companyId', type: 'string' }, { internalType: 'string', name: '_userMappingId', type: 'string' }], name: 'getCompanyUserDetail', outputs: [{ internalType: 'string', name: '', type: 'string' }, { internalType: 'string', name: '', type: 'string' }, { internalType: 'string', name: '', type: 'string' }, { internalType: 'string', name: '', type: 'string' }, { internalType: 'string', name: '', type: 'string' }, { internalType: 'string', name: '', type: 'string' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'string', name: '_userMappingId', type: 'string' }], name: 'getUserMappingDetailById', outputs: [{ internalType: 'string', name: 'userMappingId', type: 'string' }, { internalType: 'string', name: 'dataUserMapping', type: 'string' }, { internalType: 'uint256', name: 'userId', type: 'uint256' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'address', name: 'sender', type: 'address' }], name: 'getUserMappingId', outputs: [{ internalType: 'string', name: '', type: 'string' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'string', name: '_companyId', type: 'string' }, { internalType: 'string', name: '_userMappingId', type: 'string' }, { internalType: 'string', name: 'role', type: 'string' }, { internalType: 'string', name: 'permission', type: 'string' }, { internalType: 'string', name: 'userMappingId', type: 'string' }, { internalType: 'string', name: 'dataUserMapping', type: 'string' }, { internalType: 'uint256', name: 'userId', type: 'uint256' }], name: 'newMemberInCompany', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'string', name: 'companyId', type: 'string' }, { internalType: 'string', name: 'userMappingId', type: 'string' }], name: 'removeUserFromCompany', outputs: [], stateMutability: 'nonpayable', type: 'function' }]

const contract = web3 ? new web3.eth.Contract(abi, address) : null;

export default contract
